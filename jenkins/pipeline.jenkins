pipeline {
  agent any
  parameters {
    string(name: "version", defaultValue: "v2.0.0", trim: true, description: "Введите версию нового docker-image")
    }
  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/spring108/DevOpsEngineneer.git'
        }
      }
    stage('replace MY_YANDEX_TOKEN in config.tf by my Yandex IAM-token') {
      steps {
        /*
        current dir = /var/lib/jenkins/workspace/DevOpsEngineneer

        in file 
        /etc/apply_token.sh
        text inside like
        sed -i 's/MY_YANDEX_TOKEN/xxxxxxxxxxxxxxxxxxx/' ./config.tf
        */

        sh '/etc/apply_token.sh > /dev/null'

        }
      }

    stage('Terraform init') {
      steps {
        sh 'terraform init'
        }
      }
    stage('Terraform apply') {
      steps {
        sh 'terraform apply --auto-approve'
        }
      }
    stage('Terraform output and make Ansible /etc/ansible/hosts file') {
      steps {
        /* chmod 777 /etc/ansible/hosts */

        sh '''
            echo "[assembly]\n" > /etc/ansible/hosts
            terraform output external_ip_address_vm_assembly >> /etc/ansible/hosts
            echo "\n\n[prod]\n" >> /etc/ansible/hosts
            terraform output external_ip_address_vm_prod >> /etc/ansible/hosts
            echo "\n" >> /etc/ansible/hosts
            sed -i \'s/"//g\' /etc/ansible/hosts > /dev/null
        '''
        }
      }


    }
  }
