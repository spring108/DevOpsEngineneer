pipeline {
  agent any
  parameters {
    string(name: "version", defaultValue: "v2.0.0", trim: true, description: "Введите версию нового docker-image")
    }
  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/spring108/DevOpsEngineneer.git'
        }
      }
    stage('replace MY_YANDEX_TOKEN in config.tf by my Yandex IAM-token') {
      steps {
        /*
        current dir = /var/lib/jenkins/workspace/DevOpsEngineneer

        in file 
        /etc/apply_token.sh
        text inside like
        sed -i 's/MY_YANDEX_TOKEN/xxxxxxxxxxxxxxxxxxx/' ./config.tf
        */

        sh '/etc/apply_token.sh > /dev/null'

        }
      }

    stage('Terraform init') {
      steps {
        sh 'terraform init'
        }
      }
    stage('Terraform apply') {
      steps {
        sh 'terraform apply --auto-approve'
        }
      }


    stage('Make /etc/ansible/hosts file for Ansible') {
      steps {
        sh """
            echo '[assembly]' > /etc/ansible/hosts
            terraform output -raw external_ip_address_vm_assembly >> /etc/ansible/hosts
            echo ' ansible_user=spring ansible_ssh_private_key_file=/var/lib/jenkins/id_rsa' >> /etc/ansible/hosts
            echo '\n[prod]' >> /etc/ansible/hosts
            terraform output -raw  external_ip_address_vm_prod >> /etc/ansible/hosts
            echo ' ansible_user=spring ansible_ssh_private_key_file=/var/lib/jenkins/id_rsa' >> /etc/ansible/hosts
            echo '\n' >> /etc/ansible/hosts
        """
        }
      }
    
    
    stage('Make parameters for Ansible in JSON-file') {
      steps {
        sh """
            echo -n '{\n\"registry_id\": \"' > /etc/ansible/params.json
            terraform output -raw yandex_container_registry_id >> /etc/ansible/params.json
            echo -n '\",\n\"version\": ' >> /etc/ansible/params.json
            echo \"\\\"$version\\\"\" >> /etc/ansible/params.json
            echo '}' >> /etc/ansible/params.json
            chmod 777 /etc/ansible/params.json
        """
        }
      }

    stage('Ansible run playbook') {
      steps {
        sh 'sudo -n ansible-playbook playbook.yml' /* will use /etc/ansible/params.json */
        }
      }

    stage('Open Resulting Website') {
      steps {
        sh 'terraform output -raw  external_ip_address_vm_prod > /etc/ansible/prod_ip'
        script {
          def prod_ip = readFile(file: '/etc/ansible/prod_ip')
          input message: "Перейдите на сайт http://${prod_ip}:8080/hello/", ok: 'Продолжить'
          }
        }
      }

    }
  }
